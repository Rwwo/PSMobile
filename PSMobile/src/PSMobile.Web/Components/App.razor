<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />

    <link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="//cdn.quilljs.com/1.3.6/quill.bubble.css" rel="stylesheet">

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link href="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="app.css" />

    <link rel="icon" type="image/png" href="favicon.ico" />


    @if (RenderModeForPage is not null)
    {
        <HeadOutlet @rendermode="@RenderModeForPage" />
    }
    else
    {
        <HeadOutlet />
    }
</head>

<body>
    @if (RenderModeForPage is not null)
    {
        <Routes @rendermode="@RenderModeForPage" />
    }
    else
    {
        <Routes />
    }

    <script src="/js/localStorageInterop.js"></script>
    <script src="/js/script_sound.js"></script>
    <script src="/js/script_quagga.js"></script>

    <script src="_content/BlazorBarcodeScanner.ZXing.JS/zxingjs.index.min.js"></script>
    <script src="_content/BlazorBarcodeScanner.ZXing.JS/BlazorBarcodeScanner.js"></script>

    <script src="_framework/blazor.web.js"></script>
    <script src="_framework/blazor.webassembly.js"></script>

    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

    <script src="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="_content/Blazored.TextEditor/quill-blot-formatter.min.js"></script>
    <script src="_content/Blazored.TextEditor/Blazored-BlazorQuill.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/quagga/0.12.1/quagga.min.js"></script>



</body>

</html>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments("/Account")
        ? null
        : InteractiveServer;
}
